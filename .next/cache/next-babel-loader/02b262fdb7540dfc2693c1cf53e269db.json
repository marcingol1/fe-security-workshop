{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport fetch from 'isomorphic-unfetch';\nexport default (async (req, res) => {\n  if (!('authorization' in req.headers)) {\n    return res.status(401).send('Authorization header missing');\n  }\n\n  const auth = await req.headers.authorization;\n\n  try {\n    const {\n      token\n    } = JSON.parse(auth);\n    const url = `https://api.github.com/user/${token}`;\n    const response = await fetch(url);\n\n    if (response.ok) {\n      const js = await response.json(); // Need camelcase in the frontend\n\n      const data = _Object$assign({}, {\n        avatarUrl: js.avatar_url\n      }, js);\n\n      console.log(data);\n      return res.status(200).json({\n        data\n      });\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      const error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    const {\n      response\n    } = error;\n    return response ? res.status(response.status).json({\n      message: response.statusText\n    }) : res.status(400).json({\n      message: error.message\n    });\n  }\n});","map":{"version":3,"sources":["/Users/marcingol/Desktop/hello-world (1)/pages/api/profile.js"],"names":["fetch","req","res","headers","status","send","auth","authorization","token","JSON","parse","url","response","ok","js","json","data","avatarUrl","avatar_url","console","log","error","Error","statusText","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAI,EAAE,mBAAmBD,GAAG,CAACE,OAAzB,CAAJ,EAAuC;AACrC,WAAOD,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,8BAArB,CAAP;AACD;;AAED,QAAMC,IAAI,GAAG,MAAML,GAAG,CAACE,OAAJ,CAAYI,aAA/B;;AAEA,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAYC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAlB;AACA,UAAMK,GAAG,GAAI,+BAA8BH,KAAM,EAAjD;AAEA,UAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACW,GAAD,CAA5B;;AAEA,QAAIC,QAAQ,CAACC,EAAb,EAAiB;AACf,YAAMC,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB,CADe,CAEf;;AACA,YAAMC,IAAI,GAAG,eAAc,EAAd,EAAkB;AAAEC,QAAAA,SAAS,EAAEH,EAAE,CAACI;AAAhB,OAAlB,EAAgDJ,EAAhD,CAAb;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,aAAOd,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB;AAAEC,QAAAA;AAAF,OAArB,CAAP;AACD,KAND,MAMO;AACL;AACA,YAAMK,KAAK,GAAG,IAAIC,KAAJ,CAAUV,QAAQ,CAACW,UAAnB,CAAd;AACAF,MAAAA,KAAK,CAACT,QAAN,GAAiBA,QAAjB;AACA,YAAMS,KAAN;AACD;AACF,GAlBD,CAkBE,OAAOA,KAAP,EAAc;AACd,UAAM;AAAET,MAAAA;AAAF,QAAeS,KAArB;AACA,WAAOT,QAAQ,GACXV,GAAG,CAACE,MAAJ,CAAWQ,QAAQ,CAACR,MAApB,EAA4BW,IAA5B,CAAiC;AAAES,MAAAA,OAAO,EAAEZ,QAAQ,CAACW;AAApB,KAAjC,CADW,GAEXrB,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB;AAAES,MAAAA,OAAO,EAAEH,KAAK,CAACG;AAAjB,KAArB,CAFJ;AAGD;AACF,CA/BD","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nexport default async (req, res) => {\n  if (!('authorization' in req.headers)) {\n    return res.status(401).send('Authorization header missing');\n  }\n\n  const auth = await req.headers.authorization;\n\n  try {\n    const { token } = JSON.parse(auth);\n    const url = `https://api.github.com/user/${token}`;\n\n    const response = await fetch(url);\n\n    if (response.ok) {\n      const js = await response.json();\n      // Need camelcase in the frontend\n      const data = Object.assign({}, { avatarUrl: js.avatar_url }, js);\n      console.log(data);\n      return res.status(200).json({ data });\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      const error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    const { response } = error;\n    return response\n      ? res.status(response.status).json({ message: response.statusText })\n      : res.status(400).json({ message: error.message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}